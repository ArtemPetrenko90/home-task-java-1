'number' + 3 + 3 // результат: number33 . 'number' — это строка, поэтому следующие операции объединяют строки

null + 3 // результат: 3 . null рассматривается в числовых операциях как 0, потому добавление 3 к null приводит к 3

5 && "qwerty" // результат: 'qwerty' . Логический оператор AND (&&) возвращает последнее истинное значение или первое ложное значение.
// '5' правдива, поэтому результатом будет 'qwerty'

+'40' + +'2' + "hillel"; // результат: 42 hillel . Унарный плюс (+) преобразует '40' и '2' в числа, а затем добавляет их к строке "hillel"


'10' - 5 === 6; // результат: false . Операция сравнения и вычитания: '10' преобразуется в число, а затем вычитается из 5,
// и результат сравнивается с 6.

true + false // результат: 1 . true рассматривается как 1, false как 0, поэтому результат равен 1, true + false

'4px' - 3 // результат: NaN . '4px' не является допустимым числом, поэтому результатом будет NaN (не число)

'4' - 3 // результат: 1 . '4' преобразуется в число, а затем из него вычитается 3


'6' + 3 ** 0; // результат: '61' . '6' объединяется с результатом 3**0 (то есть 1)


12 / '6' // результат: 2 . Деление 12 на 6 дает 2


'10' + (5 === 6); // результат: '10false' . Выражение внутри круглых скобок (5 === 6) является false, поэтому '10' объединяется с false


null == '' // результат: true . Сравнение на равенство, null приводит к пустой строке, и результат равен true
null == '';

3 ** (9 / 3); // результат: 27 . 3** (9/3) эквивалентно 3**3, что равно 27
 

!!'false' == !!'true' // результат: true . 'true' and 'false' правдивы, поэтому результат true

0 || '0' && 1 // результат: '0' . Логическое OR (||) возвращает первое true значение или последнее false значение.
// '0' true, поэтому результат равен '0'

(+null == false) < 1; // результат: false . (+null == false) true, а 1 меньше 1, поэтому результат false

false && true || true // результат: true . false && true — это false, а false || true — это правда, поэтому результат верен

false && (false || true); // результат: false . false || true — это true, а false && (false || true) — false, поэтому результат — false

(+null == false) < 1 ** 5; // результат: true . Оператор возведения в степень (**) имеет более высокий приоритет, чем оператор сравнения (<),
// итак (+null == false) истинно, а 1**5 равно 1, что дает true